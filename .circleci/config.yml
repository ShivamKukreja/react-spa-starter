# Javascript Node CircleCI 2.0 configuration file
# change for build 4
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
orbs:
    cypress: cypress-io/cypress@1
    aws-s3: circleci/aws-s3@1.0.0
jobs:
  test:
    docker:
      - image: cypress/base:8
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn ci:cypress

  deploy-prod:
    docker:
      - image: circleci/node:12.8.0-buster

    working_directory: ~/repo

    steps:
      - checkout

#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-

      - run: npm install
#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}

      # build
      - run: npm run build:react

      # deploy
#      - run: sudo apt-get update && sudo apt-get install -y python-dev
#      - run: sudo curl -O https://bootstrap.pypa.io/get-pip.py
#      - run: sudo python get-pip.py
#      - run: sudo pip install awscli --upgrade
#      - run: aws --version
#      - run: aws s3 ls
#      - run: yarn run deploy:prod

workflows:
  version: 2
  test-build-deploy:
    jobs:
#      - test:
#          filters:
#            branches:
#              ignore:
#                - develop
#                - /feature-.*/
#                - /bug-.*/
#      - deploy-stage:
#          requires:
#            - build
#          filters:
#            branches:
#              only: staging
      - deploy-prod:
#          requires:
#            - test
          filters:
            branches:
              only: master
